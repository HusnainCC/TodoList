@using TodoList.Models
@using Microsoft.AspNetCore.Components.Web

@page "/todo"
@rendermode InteractiveServer

<PageTitle>Todo</PageTitle>

<div class="todo-container">
    <h1 class="todo-header">Todo (@todos.Count(todo => !todo.IsDone))</h1>

    <ul class="todo-list">
        @foreach (var todo in todos)
        {
                <li class="@(todo.IsDone ? "done" : "")">
                    <input type="checkbox" @bind="todo.IsDone" />
                    <input type="text" @bind="todo.Title" disabled="@todo.IsDone" />
                    <button class="delete-btn" @onclick="() => RemoveTodo(todo)">-</button>
                </li>
        }
    </ul>

    <div class="todo-input">
        <input placeholder="What ToDo"
               @bind="newTodo"
               @onkeydown="HandleEnterKey" />
        <button @onclick="AddTodo">Add todo</button>
    </div>
</div>

@code {
    private List<TodoItem> todos = [];
    private string? newTodo;

    private void AddTodo()
    {
        if (!string.IsNullOrWhiteSpace(newTodo))
        {
            todos.Add(new TodoItem { Title = newTodo });
            newTodo = string.Empty;
        }
    }

    private void RemoveTodo(TodoItem item)
    {
        todos.Remove(item);
    }

    private void HandleEnterKey(KeyboardEventArgs e)
    {
        if (e.Key == "Enter")
        {
            AddTodo();
        }
    }
}
